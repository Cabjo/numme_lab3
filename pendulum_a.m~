clear all, close all, clc
%format long

% Problem a
theta_0 = 5:5:90;                   % Theta_0 in degrees
theta_0 = theta_0*pi/180;           % Theta_0 in radians
T_vector = zeros(size(theta_0));

l = 0.5;                            % Length of the pendulum
g = 9.82;                           % The standard acceleration of gravity
t = @(i) 4*sqrt(l/g)*i;             % The period of swing
index = 0;

% I(theta_0) is calculated by the composite Trapezoid Rule (Trapetsregeln)
for theta = theta_0(1:end) 
    index = index + 1;
    k = sin(theta/2);
    h = 0.01;
    alpha = 0:h:pi/2;
    integral_f = @(x) 1./sqrt(1 - k.^2.*sin(x).^2);
    
    f = integral_f(alpha);
    I_theta = sum(h*f) - h/2*(f(1)+f(end));
    
    t_old = 2;
    t_new = t(I_theta);
    
    while abs(t_old - t_new) > 1e-10
        t_old = t_new;
        h = h/2;
        alpha = 0:h:pi/2;
        f = integral_f(alpha);
        I_theta_next = sum(h*f) - h/2*(f(1)+f(end));
        t_new = t(I_theta_next);
    end
       
    T_vector(index) = t_new;
end

table = [theta_0', T_vector'];



% Problem b
T_tilde = 2*pi*sqrt(l/g);
error_vector_1_percent = [];
error_theta_vector_1_percent = [];

error_vector_10_percent = [];
error_theta_vector_10_percent = [];

relative_error = abs((T_vector - T_tilde)./T_vector)'

for i = 1:size(relative_error) % error = relative_error(1:end)
    if relative_error(i) < 0.01
        error_vector_1_percent = [error_vector_1_percent relative_error(i)];
        error_theta_vector_1_percent = [error_theta_vector_1_percent theta_0(i)];
    
    elseif relative_error(i) < 0.1
        error_vector_10_percent = [error_vector_10_percent relative_error(i)];
        error_theta_vector_10_percent = [error_theta_vector_10_percent theta_0(i)];
    end
end

error_table_1_procent = [error_theta_vector_1_percent', error_vector_1_percent']
error_table_10_procent = [error_theta_vector_10_percent', error_vector_10_percent']
